name: "publish"
on:
  push:
    branches:
      - release

jobs:
  create-release:
    permissions:
      contents: write
    runs-on: ubuntu-22.04
    outputs:
      release_id: ${{ steps.create-release.outputs.result }}
      version: ${{ env.VERSION }}

    steps:
      - uses: actions/checkout@v4

      - name: get version from Cargo.toml
        run: |
          version=$(grep -o '^version = "[^"]*"' Cargo.toml | awk -F'"' '{print $2}' | xargs)
          echo "VERSION=$version" >> $GITHUB_ENV

      - name: build changelog
        id: github_release_changelog
        uses: mikepenz/release-changelog-builder-action@v3
        with:
          configuration: ".github/changelog-configuration.json"
          toTag: "refs/heads/main"
          failOnError: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: create release
        id: create-release
        uses: actions/github-script@v7
        env:
          changelog: ${{ steps.github_release_changelog.outputs.changelog }}
        with:
          script: |
            const { data } = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: `v${process.env.VERSION}`,
              name: `v${process.env.VERSION}`,
              body: process.env.changelog,
              draft: true,
            })
            return data.id

  build:
    needs: create-release
    permissions:
      contents: write
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: install upx
        run: |
          sudo apt-get update
          sudo apt-get install upx

      - name: build release
        env:
          VERSION: ${{ env.VERSION }}
        run: |
          cargo build -r
          cd target/release
          upx -9 server
          tar zcvf mind-pulse-server-$VERSION.tar.gz server
          echo "ASSET_PATH=$(pwd)/mind-pulse-server-$VERSION.tar.gz" >> $GITHUB_ENV

      - name: upload release asset
        uses: actions/github-script@v7
        env:
          VERSION: ${{ needs.create-release.outputs.version }}
          release_id: ${{ needs.create-release.outputs.release_id }}
        with:
          script: |
            const fs = require("fs")
            const filename = `mind-pulse-server-${process.env.VERSION}.tar.gz`
            const data = fs.readFileSync(process.env.ASSET_PATH)
            github.rest.repos.uploadReleaseAsset({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: process.env.release_id,
              data,
              name: filename
            })


      - name: publish release
        id: publish-release
        uses: actions/github-script@v7
        env:
          release_id: ${{ needs.create-release.outputs.release_id }}
        with:
          script: |
            github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: process.env.release_id,
              draft: false,
            })

